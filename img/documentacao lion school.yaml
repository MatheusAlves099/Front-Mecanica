openapi: 3.0.3
info:
  title: Swagger API Lion Schools
  description: |-
                  API para o projeto Lion Schools, onde foi realizado o CRUD de Aluno
  termsOfService: http://swagger.io/terms/
  contact:
    email: tifreitas10@gmail.com
  version: 1.0.0
externalDocs:
  description: Documentação extra da API Lion Schools
  url: http://swagger.io
servers:
  - url: http://localhost:8080/v1/lion-school
tags:
  - name: aluno
    description: EndPoints para realizar o CRUD do aluno do projeto Lion School
paths:
  /aluno/{id}:
    put:
      tags:
        - aluno
      summary: Atualizar Aluno
      description: 'Atualizar o aluno utilizando o ID como parametro e recebendo os dados no corpo da requisição em formato JSON'
      operationId: Update aluno
      # Comentário
      parameters:
        - name: id
          in: path
          description: ID para referencia do aluno a ser atualizado
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Os dados do aluno que serão atualizados no Banco de Dados deverá vir no corpo da requisição e em formato JSON'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Aluno'
        required: true
      responses:
        '400':
          description: 'Campos obrigatórios não foram preenchidos || O ID informado na requisição não é válido ou não foi encaminhado.'
        '404':
          description: 'Nenhum item encontrado na requisição.'
        '500':
          description: 'Devido a um erro interno no servidor, não foi possível processar a requisição.'
        '200':
          description: 'Item atualizado com sucesso.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aluno'          
    delete:
      tags:
        - aluno
      summary: Excluir aluno
      description: 'Excluir o aluno utilizando o ID como parametro'
      parameters:
        - name: id
          in: path
          description: 'ID para referencia do aluno a ser excluido'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Item Excluido com sucesso.'
        '400':
          description: 'O ID informado na requisição não é válido ou não foi encaminhado.'
        '404':
          description: 'Nenhum item encontrado na requisição.'
        '500':
          description: 'Devido a um erro interno no servidor, não foi possível processar a requisição.'
    get:
      tags:
        - aluno
      summary: Retrona o aluno pelo ID
      description: Retorna os dados do aluno em formato JSON filtrando pelo ID
      parameters:
        - name: id
          in: path
          description: 'ID para referenciar o aluno a ser encontrado'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Item encontrado'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Aluno'
        '400':
          description: 'O ID informado na requisição não é válido ou não foi encaminhado.'
        '404':
          description: 'Nenhum item encontrado na requisição.'
        '500':
          description: 'Devido a um erro interno no servidor, não foi possível processar a requisição.'
  /aluno:
    get:
      tags:
        - aluno
      summary: Retorna todos os alunos
      description: Retorna todos os alunos em formato JSON
      parameters:
        - name: nome
          in: query
          description: Filtro do aluno realizado pelo nome
          required: false
          schema: 
            type: string
      responses:
        '200':
          description: 'Itens encontrados'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Aluno'          
        '404':
          description: 'Nenhum item encontrado na requisição.'
    post:
      tags:
        - aluno
      summary: Inserir novo Aluno
      description: 'Inserir novo aluno recebendo os dados no corpo da requisição em formato JSON'
      operationId: Insert Aluno
      requestBody:
        description: 'Os dados do aluno que serão inserirdos no Banco de Dados deverá vir no corpo da requisição e em formato JSON'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Aluno'
        required: true
      responses:
        '400':
          description: 'Campos obrigatórios não foram preenchidos'
        '500':
          description: 'Devido a um erro interno no servidor, não foi possível processar a requisição.'
        '201':
          description: 'Item inserido com sucesso.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aluno'

components:
  schemas:
    Aluno:
      required:
        - nome
        - cpf
        - rg
        - email
        - data_nascimento
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        cpf:
          type: string
        rg:
          type: string
        email:
          type: string
        data_nascimento: 
          type: string
          format: date





